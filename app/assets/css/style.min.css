/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2016. MIT licensed.
 */
.clear:after,.clear:before{content:' ';display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:14px}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;color:#787777;transition:all .4s ease-in .3s}body,html{min-height:100vh}.inline-r{float:right;clear:both}.border{border-left:1px solid grey;border-right:1px solid grey}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}body{background:#000;overflow-yx:scroll}.container{border:3px solid teal;max-width:915px;margin:0 auto;height:auto}.satic{position:absolute;top:0;width:100%;background:#e1e71b;height:70px;z-index:-1}.cta{padding:10px 27px 0;max-width:915px;color:#6b7007}.cta:after{content:'';display:block;clear:both}.floatL{float:left;padding:15px 0;width:49%;clear:left}.floatL span{text-align:left}.floatL button{margin-left:10px;background:#a8ae00;width:108px;height:24px}.floatR{float:right;text-align:right;padding:15px 0;width:43%;clear:right}.floatR span{text-align:left}.floatR button{margin-left:10px;background:#a8ae00;width:108px;height:24px}.mid{border:1px solid grey;height:28px;margin:1em}.inline-btns>button,.mid{display:inline-block}.id{padding:10px 27px;border-bottom:4px solid #87e2d1;background:#fff}.fr{float:right;clear:both}.fr .call{text-align:right}.fr:after{content:'';display:block;clear:both}.logo{height:85px;display:inline-block}.logo img{float:left}.nav{height:36px;background:#47c8ab;width:100%}.nav ul{display:-ms-flexbox;display:flex;margin:0;list-style:none;text-align:center;padding:8px 27px}.nav li,.nav ul{-ms-flex-pack:justify;justify-content:space-between}.nav a{text-decoration:none;font-size:1.1em;color:#fff;text-transform:uppercase}main{background:#fbfbfb url(../../assets/img/iv/hero-bg.png) no-repeat;margin-top:0}main .hero{padding:10px 50px;width:300px;height:220px}main h1{font-weight:200}main .form-inputs{display:-ms-inline-flexbox;display:inline-flex}main .formL{max-width:520px;margin:50px 0 0 45px}main .blocktext{margin-bottom:30px}main .pushR{float:right}main .radioR input{margin-left:20px}main .col1{display:inline-block}main .col1 input{width:250px;height:40px;border:1px solid #e8e8e8;border-radius:3}main .col1:after{display:block;content:'';clear:both;margin-bottom:30px}main .col2{float:right}main .col2 input{width:250px;height:40px;border:1px solid #e8e8e8;border-radius:3}main .col2:after{display:block;content:'';clear:both;margin-bottom:30px}main .colf input{display:block;width:520px;height:40px}main .colf:after{display:block;content:'';clear:both;margin-bottom:30px}main .gmap{float:right;width:282px;margin-right:28px;padding-top:50px}main .bbtn{width:90px;height:40px;border-radius:5px;background:#47c8ab}main .googleMap{border:1px solid #d3d3d3}button{border:none;color:#fefefe;border-radius:5px;text-transform:uppercase}.teal-btn{background:#47c8ab;width:135px;height:30px;margin-right:15px}.grey-btn{background:#b3b3b3;width:180px;height:30px}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvX2NsZWFyZml4LnNjc3MiLCJzdHlsZS5jc3MiLCJtb2R1bGVzL19kZWZhdWx0cy5zY3NzIiwibW9kdWxlcy9fbm9ybWFsaXplLnNjc3MiLCJwYXJ0aWFscy9faGVhZGVyLnNjc3MiLCJtb2R1bGVzL192YXJzLnNjc3MiLCJtaXhpbnMvX3Bvc2l0aW9uLnNjc3MiLCJwYXJ0aWFscy9fbmF2LnNjc3MiLCJwYXJ0aWFscy9fbWFpbi5zY3NzIiwibW9kdWxlcy9fYnV0dG9ucy5zY3NzIiwibW9kdWxlcy9fbWlzYy5zY3NzIiwibW9kdWxlcy9fcHJpbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLDJCQUNFLFlBQWEsQUFDYixhQUFlLENBQ2hCLEFBQ0QsUUNDRSxNREFTLENBRFgsQUFTQyxhQUZHLFVBQVksQ0FDYixBRVpILEVBQ0Usc0JBQXVCLEFBQ3ZCLDJCQUE0QixBQUM1QixpQ0FBbUMsQ0FDcEMsQUFFRCxLQUNFLGNBQWdCLENBRWpCLEFBRUQsS0FDRSxpREFBc0QsQUFDdEQsY0FBZSxBQUNmLDhCQUFnQyxDQUNqQyxBQUVELFVBQ0MsZ0JBQWtCLENBRWxCLEFBRUQsVUFDSSxZQUFhLEFBQ2IsVUFBWSxDQUNmLEFBRUQsUUFDRSwyQkFBMkIsQUFDM0IsMkJBQTRCLENBQzdCOztBQzlCRCw0RUFBNEUsQUFPNUUsS0FDRSx1QkFBd0IsQUFDeEIsMEJBQTJCLEFBQzNCLDZCQUErQixDQUNoQyxBQU1ELEtBQ0UsUUFBVSxDQUNYLEFBV0Qsb0ZBWUUsYUFBZSxDQUNoQixBQU1ELDRCQUlFLG9CQUFzQixDQUN2QixBQU1ELHNCQUNFLGFBQWMsQUFDZCxRQUFVLENBQ1gsQUFNRCxTQUNFLHVCQUF5QixDQUMxQixBQU9ELGtCQUVFLFlBQWMsQ0FDZixBQVVELEVBQ0UsNkJBQThCLEFBQzlCLG9DQUFzQyxDQUN2QyxBQU9ELGlCQUVFLGVBQWlCLENBQ2xCLEFBVUQsWUFDRSxtQkFBb0IsQUFDcEIsMEJBQTJCLEFBQzNC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QyxZQUFZLEFBQ1osY0FBZSxBQUNmLGtCSkVrQixBSURsQix3QkFBMEIsQ0FDMUIsQUFHRCxVQUNFLG1CSkhZLEFJSVosWUFBYSxBQUNiLFlBQWEsQUFDYixpQkFBbUIsQ0FDcEIsQUFFRCxVQUNDLG1CSlRhLEFJVWIsWUFBYSxBQUNiLFdBQWEsQ0FDYixBQ25CRCxZQUNFLGdCQUFpQixBQUNqQixXQUFZLEFBQ1osZ0JBQWtCLENBQ25CLEFBQ0QsaUJBQ0UsZ0JBQWlCLEFBQ2pCLFdBQVksQUFDWixnQkFBa0IsQ0FDbkIsQUFDRCxvQkFDRSxnQkFBaUIsQUFDakIsV0FBWSxBQUNaLGdCQUFrQixDQUNuQixBQ2RELGFBQ0UsRUFDRSxpQ0FBbUMsQUFDbkMscUJBQXVCLEFBQ3ZCLDBCQUE0QixBQUM1QiwwQkFBNkIsQ0FDOUIsQUFDRCxZQUVFLHlCQUEyQixDQUM1QixBQUNELGNBQ0UsMkJBQTRCLENBQzdCLEFBQ0Qsa0JBQ0UsNEJBQTZCLENBQzlCLEFBQ0QsNERBR0UsVUFBWSxDQUNiLEFBQ0QsZUFFRSxzQkFBdUIsQUFDdkIsdUJBQXlCLENBQzFCLEFBQ0QsTUFDRSwwQkFBNEIsQ0FDN0IsQUFDRCxPQUVFLHVCQUF5QixDQUMxQixBQUNELElBQ0Usd0JBQTJCLENBQzVCLEFBQ0QsTUFDRSxXQUFjLENBQUEsQUFFaEIsUUFHRSxVQUFXLEFBQ1gsUUFBVSxDQUNYLEFBQ0QsTUFFRSxzQkFBd0IsQ0FDekIsQ0FBQSIsImZpbGUiOiJzdHlsZS5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiJWNsZWFyIHtcbiAgY29udGVudDogJyAnO1xuICBkaXNwbGF5OiB0YWJsZTtcbn1cbi5jbGVhciB7XG4gICp6b29tOiAxO1xuICAmOmJlZm9yZSB7XG4gICAgQGV4dGVuZCAlY2xlYXI7XG4gIH1cbiAgJjphZnRlciB7XG4gICAgQGV4dGVuZCAlY2xlYXI7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbn1cbiIsIi5jbGVhcjpiZWZvcmUsIC5jbGVhcjphZnRlciB7XG4gIGNvbnRlbnQ6ICcgJztcbiAgZGlzcGxheTogdGFibGU7IH1cblxuLmNsZWFyIHtcbiAgKnpvb206IDE7IH1cbiAgLmNsZWFyOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDsgfVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5OyB9XG5cbmh0bWwge1xuICBmb250LXNpemU6IDE0cHg7IH1cblxuYm9keSB7XG4gIGZvbnQ6IDMwMCAxM3B4LzEuNiAnSGVsdmV0aWNhIE5ldWUnLCBIZWx2ZXRpY2EsIEFyaWFsO1xuICBjb2xvcjogIzc4Nzc3NztcbiAgdHJhbnNpdGlvbjogYWxsIC40cyAuM3MgZWFzZS1pbjsgfVxuXG5ib2R5LCBodG1sIHtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIC8qb3ZlcmZsb3c6IGhpZGRlbjsqLyB9XG5cbi5pbmxpbmUtciB7XG4gIGZsb2F0OiByaWdodDtcbiAgY2xlYXI6IGJvdGg7IH1cblxuLmJvcmRlciB7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgZ3JleTtcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgZ3JleTsgfVxuXG4vKiEgbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbiAqL1xuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSwgYW5kIEZpcmVmb3guXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG50ZW1wbGF0ZSxcbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0cztcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDsgfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4OyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuYm9keSB7XG4gIGJhY2tncm91bmQ6IGJsYWNrO1xuICBvdmVyZmxvdy15eDogc2Nyb2xsOyB9XG5cbi5jb250YWluZXIge1xuICBib3JkZXI6IDNweCBzb2xpZCB0ZWFsO1xuICBtYXgtd2lkdGg6IDkxNXB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi5zYXRpYyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZDogI2UxZTcxYjtcbiAgaGVpZ2h0OiA3MHB4O1xuICB6LWluZGV4OiAtMTsgfVxuXG4uY3RhIHtcbiAgcGFkZGluZzogMTBweCAyN3B4IDBweDtcbiAgbWF4LXdpZHRoOiA5MTVweDtcbiAgY29sb3I6ICM2YjcwMDc7IH1cbiAgLmN0YTphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY2xlYXI6IGJvdGg7IH1cblxuLmZsb2F0TCB7XG4gIGZsb2F0OiBsZWZ0O1xuICBwYWRkaW5nOiAxNXB4IDBweDtcbiAgd2lkdGg6IDQ5JTtcbiAgY2xlYXI6IGxlZnQ7IH1cbiAgLmZsb2F0TCBzcGFuIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIC5mbG9hdEwgYnV0dG9uIHtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBiYWNrZ3JvdW5kOiAjYThhZTAwO1xuICAgIHdpZHRoOiAxMDhweDtcbiAgICBoZWlnaHQ6IDI0cHg7IH1cblxuLmZsb2F0UiB7XG4gIGZsb2F0OiByaWdodDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIHBhZGRpbmc6IDE1cHggMHB4O1xuICB3aWR0aDogNDMlO1xuICBjbGVhcjogcmlnaHQ7IH1cbiAgLmZsb2F0UiBzcGFuIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIC5mbG9hdFIgYnV0dG9uIHtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBiYWNrZ3JvdW5kOiAjYThhZTAwO1xuICAgIHdpZHRoOiAxMDhweDtcbiAgICBoZWlnaHQ6IDI0cHg7IH1cblxuLm1pZCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGdyZXk7XG4gIGhlaWdodDogMjhweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW46IDFlbTsgfVxuXG4uaW5saW5lLWJ0bnMgPiBidXR0b24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLmlkIHtcbiAgcGFkZGluZzogMTBweCAyN3B4O1xuICBib3JkZXItYm90dG9tOiA0cHggc29saWQgIzg3ZTJkMTtcbiAgYmFja2dyb3VuZDogI2ZmZjsgfVxuXG4uZnIge1xuICBmbG9hdDogcmlnaHQ7XG4gIGNsZWFyOiBib3RoOyB9XG4gIC5mciAuY2FsbCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cbiAgLmZyOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjbGVhcjogYm90aDsgfVxuXG4ubG9nbyB7XG4gIGhlaWdodDogODVweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gIC5sb2dvIGltZyB7XG4gICAgZmxvYXQ6IGxlZnQ7IH1cblxuLm5hdiB7XG4gIGhlaWdodDogMzZweDtcbiAgYmFja2dyb3VuZDogIzQ3YzhhYjtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgLm5hdiB1bCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgbWFyZ2luOiAwO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDhweCAyN3B4OyB9XG4gIC5uYXYgbGkge1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxuICAubmF2IGEge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBmb250LXNpemU6IDEuMWVtO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cblxuLyptYWluLm1haW4ge1xuXHRtYXJnaW46MDtcblx0aGVpZ2h0OjIyMHB4O1xuXHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uL2Fzc2V0cy9pbWcvaXYvaGVyby1iZy5wbmcnKTtcblx0aDF7XG5cdFx0bWFyZ2luOjA7XG5cdFx0Zm9udC13ZWlnaHQ6MjAwO1xuXHRcdHBhZGRpbmc6MzBweCAwcHggMHB4IDUwcHg7XG5cdFx0Zm9udC1zaXplOjM1cHg7XG5cdH1cblx0cHtcblx0XHRmb250LXNpemU6MS4xZW07XG5cdFx0d2lkdGg6MjY5cHg7XG5cdFx0cGFkZGluZy1sZWZ0OjUwcHg7XG5cdH1cblx0c2VjdGlvbntcblx0XHRiYWNrZ3JvdW5kOiAjZmJmYmZiO1xuXHRcdG1hcmdpbi10b3A6NzVweDtcblx0XHRoZWlnaHQ6MTAwcHg7XG5cdFx0Ym9yZGVyOjFweCBzb2xpZCBncmVlbjtcblx0fVxuXG59XG4qL1xubWFpbiB7XG4gIGJhY2tncm91bmQ6ICNmYmZiZmIgdXJsKFwiLi4vLi4vYXNzZXRzL2ltZy9pdi9oZXJvLWJnLnBuZ1wiKSBuby1yZXBlYXQ7XG4gIG1hcmdpbi10b3A6IDBweDsgfVxuICBtYWluIC5oZXJvIHtcbiAgICBwYWRkaW5nOiAxMHB4IDUwcHg7XG4gICAgd2lkdGg6IDMwMHB4O1xuICAgIGhlaWdodDogMjIwcHg7IH1cbiAgbWFpbiBoMSB7XG4gICAgZm9udC13ZWlnaHQ6IDIwMDsgfVxuICBtYWluIC5mb3JtLWlucHV0cyB7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7IH1cbiAgbWFpbiAuZm9ybUwge1xuICAgIG1heC13aWR0aDogNTIwcHg7XG4gICAgbWFyZ2luOiA1MHB4IDBweCAwIDQ1cHg7IH1cbiAgbWFpbiAuYmxvY2t0ZXh0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4OyB9XG4gIG1haW4gLnB1c2hSIHtcbiAgICBmbG9hdDogcmlnaHQ7IH1cbiAgbWFpbiAucmFkaW9SIGlucHV0IHtcbiAgICBtYXJnaW4tbGVmdDogMjBweDsgfVxuICBtYWluIC5jb2wxIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgbWFpbiAuY29sMSBpbnB1dCB7XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZThlOGU4O1xuICAgIGJvcmRlci1yYWRpdXM6IDM7IH1cbiAgbWFpbiAuY29sMTphZnRlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29udGVudDogJyc7XG4gICAgY2xlYXI6IGJvdGg7XG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuICBtYWluIC5jb2wyIHtcbiAgICBmbG9hdDogcmlnaHQ7IH1cbiAgbWFpbiAuY29sMiBpbnB1dCB7XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZThlOGU4O1xuICAgIGJvcmRlci1yYWRpdXM6IDM7IH1cbiAgbWFpbiAuY29sMjphZnRlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29udGVudDogJyc7XG4gICAgY2xlYXI6IGJvdGg7XG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuICBtYWluIC5jb2xmIGlucHV0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogNTIwcHg7XG4gICAgaGVpZ2h0OiA0MHB4OyB9XG4gIG1haW4gLmNvbGY6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGNsZWFyOiBib3RoO1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7IH1cbiAgbWFpbiAuZ21hcCB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIHdpZHRoOiAyODJweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDI4cHg7XG4gICAgcGFkZGluZy10b3A6IDUwcHg7IH1cbiAgbWFpbiAuYmJ0biB7XG4gICAgd2lkdGg6IDkwcHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBiYWNrZ3JvdW5kOiAjNDdjOGFiOyB9XG4gIG1haW4gLmdvb2dsZU1hcCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgbGlnaHRncmV5OyB9XG5cbmJ1dHRvbiB7XG4gIGJvcmRlcjogbm9uZTtcbiAgY29sb3I6ICNmZWZlZmU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuXG4udGVhbC1idG4ge1xuICBiYWNrZ3JvdW5kOiAjNDdjOGFiO1xuICB3aWR0aDogMTM1cHg7XG4gIGhlaWdodDogMzBweDtcbiAgbWFyZ2luLXJpZ2h0OiAxNXB4OyB9XG5cbi5ncmV5LWJ0biB7XG4gIGJhY2tncm91bmQ6ICNiM2IzYjM7XG4gIHdpZHRoOiAxODBweDtcbiAgaGVpZ2h0OiAzMHB4OyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0ZvbnQtTmFtZSc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvZm9udC1uYW1lLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9mb250LW5hbWUuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvZm9udC1uYW1lLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvZm9udC1uYW1lLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvZm9udC1uYW1lLnN2ZyNmb250LW5hbWVcIikgZm9ybWF0KFwic3ZnXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuOjotbW96LXNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG46Oi13ZWJraXQtc2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbkBtZWRpYSBwcmludCB7XG4gICoge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDsgfVxuICBhLFxuICBhOnZpc2l0ZWQge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG4gIGFbaHJlZl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiOyB9XG4gIGFiYnJbdGl0bGVdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cih0aXRsZSkgXCIpXCI7IH1cbiAgLmlyIGE6YWZ0ZXIsXG4gIGFbaHJlZl49XCJqYXZhc2NyaXB0OlwiXTphZnRlcixcbiAgYVtocmVmXj1cIiNcIl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7IH1cbiAgcHJlLFxuICBibG9ja3F1b3RlIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDsgfVxuICB0aGVhZCB7XG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwOyB9XG4gIHRyLFxuICBpbWcge1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDsgfVxuICBpbWcge1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9XG4gIEBwYWdlIHtcbiAgICBtYXJnaW46IDAuNWNtOyB9XG4gIHAsXG4gIGgyLFxuICBoMyB7XG4gICAgb3JwaGFuczogMztcbiAgICB3aWRvd3M6IDM7IH1cbiAgaDIsXG4gIGgzIHtcbiAgICBwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDsgfSB9XG4iLCIqIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xufVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICAvLyBiYWNrZ3JvdW5kOiByYWRpYWwtZ3JhZGllbnQoZWxsaXBzZSBhdCBjZW50ZXIsICRiYXNlIDAsICRkYXJrZW4gODAlLCAkYmFjayAxMDAlKTtcbn1cblxuYm9keSB7XG4gIGZvbnQ6IDMwMCAxM3B4LzEuNiAnSGVsdmV0aWNhIE5ldWUnLCBIZWx2ZXRpY2EsIEFyaWFsO1xuICBjb2xvcjogIzc4Nzc3NztcbiAgdHJhbnNpdGlvbjogYWxsIC40cyAuM3MgZWFzZS1pbjtcbn1cblxuYm9keSxodG1sIHtcblx0bWluLWhlaWdodDogMTAwdmg7XG5cdC8qb3ZlcmZsb3c6IGhpZGRlbjsqL1xufVxuXG4uaW5saW5lLXJ7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIGNsZWFyOiBib3RoO1xufVxuXG4uYm9yZGVyIHtcbiAgYm9yZGVyLWxlZnQ6MXB4IHNvbGlkIGdyZXk7XG4gIGJvcmRlci1yaWdodDoxcHggc29saWQgZ3JleTtcbn1cblxuXG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscywgLyogMSAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sIC8qIDIgKi9cbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7IC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cblxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAtLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxudGVtcGxhdGUsIC8qIDEgKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwO1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG59XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgbWFyZ2luIGluIElFIDguXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQgeyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sIC8qIDEgKi9cblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbn1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cblxuYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XG59XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBvcGFjaXR5OiAwLjU0O1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cbiIsImJvZHl7YmFja2dyb3VuZDpibGFjaztcdG92ZXJmbG93LXl4OnNjcm9sbDt9XG4uY29udGFpbmVyIHtcblx0Ym9yZGVyOjNweCBzb2xpZCB0ZWFsO1xuXHRtYXgtd2lkdGg6OTE1cHg7XG5cdG1hcmdpbjowIGF1dG87XG5cdGhlaWdodDphdXRvO1xufVxuLnNhdGljIHtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IDA7XG5cdHdpZHRoOiAxMDAlO1xuXHRiYWNrZ3JvdW5kOiAjZTFlNzFiO1xuXHRoZWlnaHQ6IDcwcHg7XG5cdHotaW5kZXg6LTE7XG59XG5cbmhlYWRlciB7XG5cdFxufVxuLmN0YSB7XG5cdHBhZGRpbmc6MTBweCAyN3B4IDBweDtcblx0bWF4LXdpZHRoOjkxNXB4O1xuXHRjb2xvcjogIzZiNzAwNztcblx0XG5cdCY6YWZ0ZXIge1xuXHRcdGNvbnRlbnQ6Jyc7XG5cdFx0ZGlzcGxheTpibG9jaztcblx0XHRjbGVhcjpib3RoO1xuXHR9XG59XG5cbi5mbG9hdEwge1xuXHRmbG9hdDogbGVmdDtcbiAgICBwYWRkaW5nOiAkZmxvYXRwO1xuICAgIHdpZHRoOiA0OSU7XG4gICAgY2xlYXI6IGxlZnQ7XG5cblx0c3BhbiB7XG5cdFx0dGV4dC1hbGlnbjpsZWZ0O1xuXHR9XG5cblx0XHRidXR0b257XG5cdFx0XHRAaW5jbHVkZSBjdGFCdXR0b25zO1xuXHR9XG59XG4uZmxvYXRSIHtcblx0ZmxvYXQ6IHJpZ2h0O1xuXHR0ZXh0LWFsaWduOnJpZ2h0O1xuXHRwYWRkaW5nOiAkZmxvYXRwO1xuXHR3aWR0aDo0MyU7XG5cdGNsZWFyOnJpZ2h0O1xuXG5cdHNwYW4ge1xuXHR0ZXh0LWFsaWduOmxlZnQ7XG5cdH1cblxuXHRidXR0b24ge1xuXHRcdEBpbmNsdWRlIGN0YUJ1dHRvbnM7XG5cdH1cbn1cbi5taWQge1xuXHRib3JkZXI6IDFweCBzb2xpZCBncmV5O1xuICAgIGhlaWdodDogMjhweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luOiAxZW07XG59XG5cbi5pbmxpbmUtYnRucyA+IGJ1dHRvbiB7XG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmlke1xuXHRwYWRkaW5nOjEwcHggMjdweDtcblx0Ym9yZGVyLWJvdHRvbTogNHB4IHNvbGlkICM4N2UyZDE7XG5cdGJhY2tncm91bmQ6I2ZmZjtcbn1cblxuLmZyIHtcblx0ZmxvYXQ6IHJpZ2h0O1xuXHRjbGVhcjpib3RoO1xuXHQuY2FsbCB7XG5cdHRleHQtYWxpZ246IHJpZ2h0O1xuXHR9XG5cdCY6YWZ0ZXIge1xuXHRcdGNvbnRlbnQ6Jyc7XG5cdFx0ZGlzcGxheTpibG9jaztcblx0XHRjbGVhcjpib3RoO1xuXHR9XG59XG5cbi5sb2dvIHtcblx0aGVpZ2h0Ojg1cHg7XG5cdGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuXHRpbWcge1xuXHRmbG9hdDogbGVmdDtcblx0fVxuXG59XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4iLCIkYmFzZSA6ICNGN0Y2RjA7XG4kZGFya2VuIDogZGFya2VuKCNGN0Y2RjAgLCAzMCUpO1xuJGJhY2s6IGRhcmtlbigjRjdGNkYwLCA0MCUpO1xuXG4kY3RhLWJ0bjogI2E4YWUwMDtcbiRib3JkZXItcmFkaXVzOiA1cHg7XG4kdGVhbDogIzQ3YzhhYjtcbiRncmV5OiAjYjNiM2IzO1xuXG4kZmxvYXRwOjE1cHggMHB4OyIsIlxuQG1peGluIGN0YUJ1dHRvbnMgKCRtYXJnaW4tbGVmdDoxMHB4LCAkYmdjb2xvcjokY3RhLWJ0biwkd2lkdGg6MTA4cHgsJGhlaWdodDoyNHB4KSB7XG4gICAgbWFyZ2luLWxlZnQ6JG1hcmdpbi1sZWZ0O1xuICAgIGJhY2tncm91bmQ6JGJnY29sb3I7XG4gICAgd2lkdGg6JHdpZHRoO1xuICAgIGhlaWdodDokaGVpZ2h0O1xufVxuXG5cblxuXG5AbWl4aW4gcG9zaXRpb24gKCRwb3NpdGlvbjogcmVsYXRpdmUsICRjb29yZGluYXRlczogMCAwIDAgMCkge1xuICAgIEBpZiB0eXBlLW9mKCRwb3NpdGlvbikgPT0gbGlzdCB7XG4gICAgICAgICRjb29yZGluYXRlczogJHBvc2l0aW9uO1xuICAgICAgICAkcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cblxuICAgICR0b3A6IG50aCgkY29vcmRpbmF0ZXMsIDEpO1xuICAgICRyaWdodDogbnRoKCRjb29yZGluYXRlcywgMik7XG4gICAgJGJvdHRvbTogbnRoKCRjb29yZGluYXRlcywgMyk7XG4gICAgJGxlZnQ6IG50aCgkY29vcmRpbmF0ZXMsIDQpO1xuXG4gICAgcG9zaXRpb246ICRwb3NpdGlvbjtcblxuICAgIEBpZiAkdG9wID09IGF1dG8ge1xuICAgICAgICB0b3A6ICR0b3A7XG4gICAgfVxuICAgIEBlbHNlIGlmIG5vdCh1bml0bGVzcygkdG9wKSkge1xuICAgICAgICB0b3A6ICR0b3A7XG4gICAgfVxuICAgIEBpZiAkcmlnaHQgPT0gYXV0byB7XG4gICAgICAgIHJpZ2h0OiAkcmlnaHQ7XG4gICAgfVxuICAgIEBlbHNlIGlmIG5vdCh1bml0bGVzcygkcmlnaHQpKSB7XG4gICAgICAgIHJpZ2h0OiAkcmlnaHQ7XG4gICAgfVxuICAgIEBpZiAkYm90dG9tID09IGF1dG8ge1xuICAgICAgICBib3R0b206ICRib3R0b207XG4gICAgfVxuICAgIEBlbHNlIGlmIG5vdCh1bml0bGVzcygkYm90dG9tKSkge1xuICAgICAgICBib3R0b206ICRib3R0b207XG4gICAgfVxuICAgIEBpZiAkbGVmdCA9PSBhdXRvIHtcbiAgICAgICAgbGVmdDogJGxlZnQ7XG4gICAgfVxuICAgIEBlbHNlIGlmIG5vdCh1bml0bGVzcygkbGVmdCkpIHtcbiAgICAgICAgbGVmdDogJGxlZnQ7XG4gICAgfVxufVxuXG5cblxuXG4iLCIubmF2IHtcblx0aGVpZ2h0OjM2cHg7XG5cdGJhY2tncm91bmQ6JHRlYWw7XG5cdHdpZHRoOjEwMCU7XG5cbiAgdWwge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBcdG1hcmdpbjowO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgcGFkZGluZzogOHB4IDI3cHg7XG4gICAgfVxuXG4gICAgbGkge1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIH1cblxuICAgICAgYSB7XG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHRcdGZvbnQtc2l6ZToxLjFlbTtcblx0XHRjb2xvcjojZmZmO1xuXHRcdHRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtcbiAgICB9XG59XG5cbiIsIi8qbWFpbi5tYWluIHtcblx0bWFyZ2luOjA7XG5cdGhlaWdodDoyMjBweDtcblx0YmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi9hc3NldHMvaW1nL2l2L2hlcm8tYmcucG5nJyk7XG5cdGgxe1xuXHRcdG1hcmdpbjowO1xuXHRcdGZvbnQtd2VpZ2h0OjIwMDtcblx0XHRwYWRkaW5nOjMwcHggMHB4IDBweCA1MHB4O1xuXHRcdGZvbnQtc2l6ZTozNXB4O1xuXHR9XG5cdHB7XG5cdFx0Zm9udC1zaXplOjEuMWVtO1xuXHRcdHdpZHRoOjI2OXB4O1xuXHRcdHBhZGRpbmctbGVmdDo1MHB4O1xuXHR9XG5cdHNlY3Rpb257XG5cdFx0YmFja2dyb3VuZDogI2ZiZmJmYjtcblx0XHRtYXJnaW4tdG9wOjc1cHg7XG5cdFx0aGVpZ2h0OjEwMHB4O1xuXHRcdGJvcmRlcjoxcHggc29saWQgZ3JlZW47XG5cdH1cblxufVxuKi9cblxubWFpbiB7XG5cdFx0YmFja2dyb3VuZDogI2ZiZmJmYiB1cmwoJy4uLy4uL2Fzc2V0cy9pbWcvaXYvaGVyby1iZy5wbmcnKSBuby1yZXBlYXQ7XG5cdFx0bWFyZ2luLXRvcDowcHg7XG5cdFx0Lmhlcm8ge1xuXHRcdFx0cGFkZGluZzogMTBweCA1MHB4O1xuXHRcdFx0d2lkdGg6MzAwcHg7XG5cdFx0XHRoZWlnaHQ6MjIwcHg7XG5cdFx0fVxuXHRcdGgxIHtcblx0XHRcdGZvbnQtd2VpZ2h0OiAyMDA7XG5cdFx0fVxuXHRcdC5mb3JtLWlucHV0cyB7XG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtZmxleDtcblx0XHR9XG5cdFx0LmZvcm1MIHtcblx0XHRcdFx0ICAgIG1heC13aWR0aDogNTIwcHg7XG4gICAgXHRcdFx0XHRtYXJnaW46IDUwcHggMHB4IDAgNDVweDtcblx0XHRcdH1cblx0XHRcdC5ibG9ja3RleHQge1xuXHRcdFx0XHRtYXJnaW4tYm90dG9tOjMwcHg7XG5cdFx0XHR9XG5cdFx0LnB1c2hSIHtcblx0XHRcdGZsb2F0OiByaWdodDtcblx0XHR9XG5cdFx0LnJhZGlvUiBpbnB1dCB7XG5cdFx0XHRtYXJnaW4tbGVmdDoyMHB4O1xuXHRcdH1cblx0XHQuY29sMSB7XG5cdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0fVxuXHRcdC5jb2wxIGlucHV0IHtcblx0XHRcdHdpZHRoOiAyNTBweDtcblx0XHRcdGhlaWdodDo0MHB4O1xuXHRcdFx0Ym9yZGVyOjFweCBzb2xpZCAjZThlOGU4O1xuXHRcdFx0Ym9yZGVyLXJhZGl1czozO1xuXHRcdH1cblx0XHQuY29sMTphZnRlcntcblx0XHRcdGRpc3BsYXk6YmxvY2s7XG5cdFx0XHRjb250ZW50OicnO1xuXHRcdFx0Y2xlYXI6Ym90aDtcblx0XHRcdG1hcmdpbi1ib3R0b206MzBweDtcblx0XHR9XG5cdFx0LmNvbDIge1xuXHRcdFx0ZmxvYXQ6cmlnaHQ7XG5cdFx0fVxuXHRcdC5jb2wyIGlucHV0e1xuXHRcdFx0d2lkdGg6IDI1MHB4O1xuXHRcdFx0aGVpZ2h0OjQwcHg7XG5cdFx0XHRib3JkZXI6MXB4IHNvbGlkICNlOGU4ZTg7XG5cdFx0XHRib3JkZXItcmFkaXVzOjM7XG5cdFx0fVxuXHRcdC5jb2wyOmFmdGVye1xuXHRcdFx0ZGlzcGxheTpibG9jaztcblx0XHRcdGNvbnRlbnQ6Jyc7XG5cdFx0XHRjbGVhcjpib3RoO1xuXHRcdFx0bWFyZ2luLWJvdHRvbTozMHB4O1xuXHRcdH1cblx0XHQuY29sZiBpbnB1dHtcblx0XHRcdGRpc3BsYXk6YmxvY2s7XG5cdFx0XHR3aWR0aDogNTIwcHg7XG5cdFx0XHRoZWlnaHQ6NDBweDtcblx0XHR9XG5cdFx0LmNvbGY6YWZ0ZXJ7XG5cdFx0XHRkaXNwbGF5OmJsb2NrO1xuXHRcdFx0Y29udGVudDonJztcblx0XHRcdGNsZWFyOmJvdGg7XG5cdFx0XHRtYXJnaW4tYm90dG9tOjMwcHg7XG5cdFx0fVxuXHRcdC5nbWFwe1xuXHRcdFx0ZmxvYXQ6cmlnaHQ7XG5cdFx0XHR3aWR0aDogMjgycHg7XG5cdFx0XHRtYXJnaW4tcmlnaHQ6IDI4cHg7XG5cdFx0XHRwYWRkaW5nLXRvcDo1MHB4O1xuXHRcdH1cblx0XHQuYmJ0bntcblx0XHRcdHdpZHRoOjkwcHg7XG5cdFx0XHRoZWlnaHQ6NDBweDtcblx0XHRcdGJvcmRlci1yYWRpdXM6NXB4O1xuXHRcdFx0YmFja2dyb3VuZDokdGVhbDtcblx0XHR9XG5cdFx0Lmdvb2dsZU1hcHtcblx0XHRcdGJvcmRlcjoxcHggc29saWQgbGlnaHRncmV5O1xuXHRcdH1cblxuXG59XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuIiwiYnV0dG9uIHtcblx0Ym9yZGVyOm5vbmU7XG5cdGNvbG9yOiAjZmVmZWZlO1xuXHRib3JkZXItcmFkaXVzOiAkYm9yZGVyLXJhZGl1cztcblx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuXG4udGVhbC1idG4ge1xuICBiYWNrZ3JvdW5kOiAkdGVhbDtcbiAgd2lkdGg6IDEzNXB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIG1hcmdpbi1yaWdodDogMTVweDtcbn1cblxuLmdyZXktYnRuIHtcblx0YmFja2dyb3VuZDogJGdyZXk7XG5cdHdpZHRoOiAxODBweDtcblx0aGVpZ2h0OiAzMHB4O1xufVxuIiwiOjpzZWxlY3Rpb257XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTtcbn1cbjo6LW1vei1zZWxlY3Rpb257XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTtcbn1cbjo6LXdlYmtpdC1zZWxlY3Rpb257XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTtcbn1cbiIsIkBtZWRpYSBwcmludCB7XG4gICoge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgfVxuICBhLFxuICBhOnZpc2l0ZWQge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICB9XG4gIGFbaHJlZl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiO1xuICB9XG4gIGFiYnJbdGl0bGVdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cih0aXRsZSkgXCIpXCI7XG4gIH1cbiAgLmlyIGE6YWZ0ZXIsXG4gICBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIsXG4gICBhW2hyZWZePVwiI1wiXTphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgfVxuICBwcmUsXG4gIGJsb2NrcXVvdGUge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM5OTk7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG4gIHRoZWFkIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7XG4gIH1cbiAgdHIsXG4gIGltZyB7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG4gIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIH1cbiAgQHBhZ2Uge1xuICAgIG1hcmdpbjogMC41Y207XG4gIH1cbiAgcCxcbiAgaDIsXG4gIGgzIHtcbiAgICBvcnBoYW5zOiAzO1xuICAgIHdpZG93czogMztcbiAgfVxuICBoMixcbiAgaDMge1xuICAgIHBhZ2UtYnJlYWstYWZ0ZXI6IGF2b2lkO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
