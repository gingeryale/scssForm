/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * 
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2016. MIT licensed.
 */
.clear:after,.clear:before{content:' ';display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:14px}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;color:#787777;transition:all .4s ease-in .3s}body,html{min-height:100vh}.inline-r{float:right;clear:both}.border{border-left:1px solid grey;border-right:1px solid grey}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}body{background:#000;overflow-yx:scroll}#mobile-nav{display:none}.container{width:915px;margin:0 auto;height:auto}.satic{position:absolute;top:0;width:100%;background:#e1e71b;height:70px;z-index:-1}.teal{color:#47c8ab}.cta{padding:10px 27px 0;max-width:915px;color:#6b7007}.cta:after{content:'';display:block;clear:both}.floatL{float:left;padding:15px 0;width:49%;clear:left}.floatL span{text-align:left}.floatL button{margin-left:10px;background:#a8ae00;width:108px;height:24px}.floatR{float:right;text-align:right;padding:15px 0;width:43%;clear:right}.floatR span{text-align:left}.floatR button{margin-left:10px;background:#a8ae00;width:108px;height:24px}.mid{border:1px solid grey;height:28px;margin:1em}.inline-btns>button,.mid{display:inline-block}.id{padding:10px 27px;border-bottom:4px solid #87e2d1;background:#fff;height:150px}.fr{float:right;clear:both}.fr .call{text-align:right;font-size:1.6em}.fr:after{content:'';display:block;clear:both}.bold{font-weight:700}.logo{height:85px;display:inline-block;padding-top:25px}.logo img{float:left;width:326px;background-image:url(../../app/assets/img/iv/logo.png)}@media (max-width:440px){.container{border:1px solid #47c8ab;width:440px}.satic{width:440px;height:150px;z-index:-1}.cta{padding:0 27px;color:#6b7007}.cta:after{content:'';display:block;clear:both}.cta .floatL{float:left;padding:15px 0;width:49%;clear:left}.cta .floatL span{display:-ms-flexbox;display:flex;text-align:center;margin-bottom:10px}.cta .floatL button{margin:0 auto;background:#a8ae00;width:108px;height:24px;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.cta .floatR{float:right;text-align:right;padding:15px 0;width:43%;clear:right}.cta .floatR span{display:-ms-flexbox;display:flex;text-align:center;margin-bottom:10px}.cta .floatR button{margin:0 auto;background:#a8ae00;width:108px;height:24px;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}.cta .mid{border:1px solid #cad306;width:1px;height:60px;margin:1.5em 1em 0}.cta .inline-btns>button,.cta .mid{display:inline-block}.id{padding:0;border-bottom:0;background:#fff;height:150px}.fr{float:none;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;background:#47c8ab;color:#fff}.fr .call{text-align:center;font-size:1.2em}.fr:after{content:'';display:block;clear:both}.fr .inline-btns{border:1px solid #cad306;display:none}.bold{font-weight:400}.logo{height:85px;padding:10px 0 0 25px}.logo img{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:218px;background:url(../app/assets/img/iv/logo-mobile.png)}.logo:after{display:block;clear:both}}.nav{height:36px;background:#47c8ab;width:100%}.nav ul{display:-ms-flexbox;display:flex;margin:0;list-style:none;text-align:center;padding:8px 27px}.nav li,.nav ul{-ms-flex-pack:justify;justify-content:space-between}.nav a{text-decoration:none;font-size:1.1em;color:#fff;text-transform:uppercase}@media (max-width:440px){.nav{display:none}#mobile-nav{display:inline-block;float:right;margin-right:45px;border:1px solid green}.box-shadow-menu{position:relative;padding-left:1.25em}.box-shadow-menu:before{content:"";position:absolute;left:0;top:0;width:30px;height:.5em;background:#000;box-shadow:0 1.15em 0 0 #000,0 2.3em 0 0 #000}}main{background:#fbfbfb url(../../assets/img/iv/hero-bg.png) no-repeat;margin-top:0;padding-top:20px;padding-bottom:60px}main .hero{padding:0 50px;width:300px;height:220px}main .hero h1{font-weight:200;font-size:2.5em}main .hero p{width:250px;font-size:1.25em;margin:0;padding:0}main .form-inputs{display:-ms-inline-flexbox;display:inline-flex}main .formL{max-width:520px;margin:0 0 0 45px}main .blocktext{margin-bottom:30px}main .gmap,main .pushR{float:right}main .gmap{width:282px;margin-right:28px}main .gmap .teal{font-size:1.3em;font-weight:400}main .googleMap{margin-top:25px}main .googleMap p{padding-top:30px;font-size:.85em;line-height:1.5em}@media (max-width:440px){main{background:#fff url(../../assets/img/iv/hero-bg-mobile.png) no-repeat;padding-bottom:0}main .hero{padding:0 50px;width:300px;height:170px}main .hero h1{font-weight:200;font-size:2em}main .hero p{width:165px;font-size:1em;margin:0;padding:0}main .form-inputs{display:-ms-flexbox;display:flex}main .form-inputs p{display:none}main .formL{width:440px;background:#fff;margin:0;padding:20px}main .blocktext{margin-bottom:30px;font-size:1.2rem}main .pushR{float:none;display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;margin-top:20px}main .gmap{padding:25px 20px;width:400px;float:none;margin-right:0}main .gmap .teal{font-size:1.3em;font-weight:400}main .googleMap{margin-top:25px;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center}main .googleMap p{display:none}}.footer{display:-ms-flexbox;display:flex;height:67px;background:#c1c1c1}.footer img{display:inline-block;padding:15px 0 15px 25px;margin-right:15px;float:left}.footer span{display:inline-block;padding:27px 0;color:#fff}@media (max-width:440px){.footer span{padding:15px 0}}button{border:none;color:#fefefe;border-radius:5px;text-transform:uppercase}.teal-btn{background:#47c8ab;width:135px;height:30px;margin-right:15px}.grey-btn{background:#b3b3b3;width:180px;height:30px}.large-btn{width:90px;height:40px;border-radius:5px;background:#47c8ab}@media (max-width:440px){.large-btn{width:400px;height:52px}}input[type=text],select,textarea{border:1px solid #e8e8e8;width:250px;height:40px;border-radius:3;background:#fff}input[type=radio]{margin-right:3px;margin-left:20px;border:1px solid #47c8ab}label:first-of-type{margin-right:15px}input[placeholder],textarea[placeholder]{color:grey;padding-left:10px}.col1{display:inline-block}.col1:after{display:block;content:'';clear:both;margin-bottom:30px}.colf textarea{width:520px;height:75px}.colf select{width:520px}.colf:after{display:block;content:'';clear:both;margin-bottom:30px}.col2{float:right}.col2:after{display:block;content:'';clear:both;margin-bottom:30px}@media (max-width:440px){.col1{display:block}.col1 .teal{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;font-size:1.2rem;padding-left:10px}.col2{display:block}.colf textarea{width:400px;height:75px}.colf select{width:400px}input[type=text],select,textarea{border:1px solid #e8e8e8;width:400px}}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;base64, */
